{
  "author": {
    "name": "Brian Hines"
  },
  "name": "spotify-metadata-search",
  "description": "A Node.js module for using the Spotify Metadata Search API",
  "keywords": [
    "music",
    "spotify"
  ],
  "license": "MIT",
  "version": "0.0.8",
  "repository": {
    "type": "git",
    "url": "git://github.com/projectweekend/node-spotify-search.git"
  },
  "main": "./lib/spotify-metadata-search.js",
  "devDependencies": {
    "chai": "~1.9.1",
    "mocha": "~1.18.2"
  },
  "readme": "A Node.js module for using the Spotify Metadata Search API. Detailed information about the responses and their structure can be found in the [Spotify documentation](https://developer.spotify.com/technologies/web-api/).\n\n### Install it\n\n~~~javascript\nnpm install spotify-metadata-search\n~~~\n\n### Require it\n\n~~~javascript\nvar SpotifySearch = require( 'spotify-metadata-search' );\n~~~\n\n### Search Tracks\n\n~~~javascript\nvar search = SpotifySearch();\n\n// This is the string you want to search for\nvar searchText = \"whatever\";\n\n// Use this to page through the Spotify response\nvar optionPageNumber = 2;\n\nsearch.track( searchText, optionPageNumber, function ( err, data ) {\n    if ( err ) {\n        // handle error\n    }\n    // 'data' contains a complete Spotify Track search JSON response\n} );\n~~~\n\n### Search Albums\n\n~~~javascript\nvar search = SpotifySearch();\n\n// This is the string you want to search for\nvar searchText = \"whatever\";\n\n// Use this to page through the Spotify response\nvar optionPageNumber = 2;\n\nsearch.album( searchText, optionPageNumber, function ( err, data ) {\n    if ( err ) {\n        // handle error\n    }\n    // 'data' contains a complete Spotify Track search JSON response\n} );\n~~~\n\n### Search Artists\n\n~~~javascript\nvar search = SpotifySearch();\n\n// This is the string you want to search for\nvar searchText = \"whatever\";\n\n// Use this to page through the Spotify response\nvar optionPageNumber = 2;\n\nsearch.artist( searchText, optionPageNumber, function ( err, data ) {\n    if ( err ) {\n        // handle error\n    }\n    // 'data' contains a complete Spotify Track search JSON response\n} );\n~~~\n\n### Lookup By URI\n\n~~~javascript\nvar search = SpotifySearch();\n\nvar spotifyURI = \"spotify:track:1hP6wr5qYhXy5Am2tvndrZ\";\n\nsearch.lookup( spotifyURI, null, function ( err, data ) {\n    if ( err ) {\n        // handle error\n    }\n    // 'data' contains a complete Spotify lookup JSON response\n} );\n~~~\n\nThe second parameter for `lookup` can be an array of words that are passed as **extras** to Spotify. These only apply if you pass in an **artist** or and **album** URI. For more information about **extras** check out the [Spotify Metadata API documentation](https://developer.spotify.com/technologies/web-api/lookup/).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/projectweekend/node-spotify-search/issues"
  },
  "_id": "spotify-metadata-search@0.0.8",
  "dist": {
    "shasum": "85458d2ae23fcd60a30caa72a78704024dfff428"
  },
  "_from": "spotify-metadata-search@",
  "_resolved": "https://registry.npmjs.org/spotify-metadata-search/-/spotify-metadata-search-0.0.8.tgz"
}
